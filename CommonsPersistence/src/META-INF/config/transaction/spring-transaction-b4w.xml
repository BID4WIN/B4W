<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:util="http://www.springframework.org/schema/util" 
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                           http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
                           http://www.springframework.org/schema/tx
                           http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
                           http://www.springframework.org/schema/util
                           http://www.springframework.org/schema/util/spring-util-3.0.xsd">

  <bean id="setAtomikosSystemProps"
        class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
    <property name="targetObject">
      <!-- System.getProperties() -->
      <bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
        <property name="targetClass"  value="java.lang.System"/>
        <property name="targetMethod" value="getProperties"/>
      </bean>
    </property>
    <property name="targetMethod" value="putAll"/>
    <property name="arguments">
      <!-- The new Properties -->
      <util:properties>
        <prop key="com.atomikos.icatch.no_file">true</prop>
        <prop key="com.atomikos.icatch.hide_init_file_path">true</prop>
        <prop key="com.atomikos.icatch.service">com.atomikos.icatch.standalone.UserTransactionServiceFactory</prop>
      </util:properties>
    </property>
  </bean>
    
  <!-- Defined Atomikos transaction service needed properties -->
  <bean id="atomikosUserTransactionService"
        class="com.atomikos.icatch.config.UserTransactionServiceImp"
        init-method="init" destroy-method="shutdownForce"
        depends-on="setAtomikosSystemProps">
    <constructor-arg>
      <!-- IMPORTANT: specify all Atomikos properties here -->
      <props>
        <!-- Needed because it is the only non default property -->
        <prop key="com.atomikos.icatch.service">com.atomikos.icatch.standalone.UserTransactionServiceFactory</prop>
        <prop key="com.atomikos.icatch.console_log_level">WARN</prop>
        <prop key="com.atomikos.icatch.console_file_limit">0</prop>
        
        <!-- MySQL does not allow for joining an existing XA transaction branch,
             as mentioned here: http://dev.mysql.com/doc/refman/5.0/en/xa-restrictions.html
             the consequence is that one transaction accessing the same MySQL multiple
             times can run into problem
             Also, make sure to set the following property on the MySQL datasource:
             pinGlobalTxToPhysicalConnection="true" -->
        <prop key="com.atomikos.icatch.serial_jta_transactions">false</prop>
        
        <!--<prop key="com.atomikos.icatch.log_base_name">tmfeederlog2</prop>
        <prop key="com.atomikos.icatch.console_file_name">${transaction.manager.console.file}</prop>
        <prop key="com.atomikos.icatch.tm_unique_name">${transaction.manager.unique.name}</prop>
        <prop key="com.atomikos.icatch.max_timeout">3600000</prop>
      --></props>
    </constructor-arg>
  </bean>

  <!-- Construct Atomikos UserTransactionManager, needed to configure Spring -->
  <bean id="atomikosTransactionManager"
        class="com.atomikos.icatch.jta.UserTransactionManager"
        init-method="init" destroy-method="close"
        depends-on="atomikosUserTransactionService">
    <!-- IMPORTANT: disable startup because the userTransactionService above does this -->
    <property name="startupTransactionService" value="false"/>
    <!-- When close is called, should we force transactions to terminate or not? --> 
    <property name="forceShutdown"             value="false"/>
  </bean>
  <!-- Also use Atomikos UserTransactionImp, needed to configure Spring com.atomikos.icatch.jta.UserTransactionImp-->
  <bean id="atomikosUserTransaction"
        class="com.atomikos.icatch.jta.J2eeUserTransaction"
        depends-on="atomikosUserTransactionService">
    <property name="transactionTimeout" value="300"/>
  </bean> 
  <!-- Configure the Spring framework to use JTA transactions from Atomikos -->
  <bean id="Bid4WinTransactionManager"
        class="org.springframework.transaction.jta.JtaTransactionManager"
        depends-on="atomikosTransactionManager, atomikosUserTransaction">
    <property name="transactionManager"         ref="atomikosTransactionManager"/>
    <property name="userTransaction"            ref="atomikosUserTransaction"/>
    <property name="allowCustomIsolationLevels" value="true"/>
  </bean>
  <!-- Enables @Transactional annotations -->
  <tx:annotation-driven transaction-manager="Bid4WinTransactionManager"/>
</beans>
